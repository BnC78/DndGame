package view;

import character.Ability;
import character.DndCharacter;
import character.Equipment;
import enums.CharacterClass;
import enums.Race;
import enums.Traits;
import java.awt.event.KeyEvent;
import java.util.Optional;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JFrame;

/**
 * Represents a dialog window for the class <code>DndCharacter</code>.
 */
public class CharacterEditDialog extends javax.swing.JDialog {

    private boolean ok;
    private DefaultListModel<Ability> abilityListModel;
    private DefaultListModel<Equipment> equipmentListModel;
    private DefaultComboBoxModel<Race> raceModel = new DefaultComboBoxModel<>(Race.values());
    private DefaultComboBoxModel<CharacterClass> characterClassModel = new DefaultComboBoxModel<>(CharacterClass.values());
    private DndCharacter character;
    
    /**
     * Creates new form CharacterEditDialog
     * @param parent parent frame of this dialog
     * @param optCharacter character to be modified (empty if new)
     */
    public CharacterEditDialog(java.awt.Frame parent, Optional<DndCharacter> optCharacter) {
        super(parent, true);
        initComponents();
        ok = false;
        abilityListModel = new DefaultListModel<>();
        equipmentListModel = new DefaultListModel<>();
        cbRace.setModel(raceModel);
        cbCharacterClass.setModel(characterClassModel);
        cbCharacterClass.setSelectedIndex(1);// Mivel ezzel meghivódik a cbCharacterClassItemStateChanged metódus,
        cbCharacterClass.setSelectedIndex(0);// ezért a jellemvonásokat nem kell itt külön beállítanom
        character = new DndCharacter();
        if (optCharacter.isPresent()) {
            character = optCharacter.get();
            tfName.setText(character.getName());
            tfBirthPlace.setText(character.getBirthPlace());
            tfLevel.setText(String.valueOf(character.getLevel()));
            tfHitPoints.setText(String.valueOf(character.getHitPoints()));
            cbRace.setSelectedItem(character.getRace());
            cbCharacterClass.setSelectedItem(character.getCharacterClass()); //Mivel ezzel meghivódik a cbCharacterClassItemStateChanged metódus ezért a jellemvonásokat nem kell itt külön beállítanom
            abilityListModel.addAll(character.getAbilities());
            equipmentListModel.addAll(character.getEquipment());
            setTitle("Karakter módosítása");
        }
        listAbilities.setModel(abilityListModel);
        listEquipment.setModel(equipmentListModel);
        abilityDetails.setVisible(false);
        equipmentDetails.setVisible(false);
    }

    /**
     * Returns <code>true</code> if the user closed the window by clicking on the <i>Ok</i> button.
     * Else it returns <code>false</code>
     * @return if window was closed by clicking the Ok button.
     */  
    public boolean isOk() {
        return this.ok;
    }
    
    /**
     * If the window was closed by clicking the <i>Ok</i> button, it returns the character based on the input fields of this window.
     * Else it returns an empty <code>Optional</code> 
     * @return an optional character
     */
    public Optional<DndCharacter> getCharacter() {
        Optional<DndCharacter> optCharacter = Optional.empty();
        if (this.isOk()) {
            Integer level = tfLevel.getText().isBlank() ? null : Integer.valueOf(tfLevel.getText());
            Integer hitPoints = tfHitPoints.getText().isBlank() ? null : Integer.valueOf(tfHitPoints.getText());
            DndCharacter dndChar = new DndCharacter(tfName.getText(), tfBirthPlace.getText(), (Race) cbRace.getSelectedItem(), (CharacterClass) cbCharacterClass.getSelectedItem(), level, hitPoints);
            if (character != null) {
                dndChar.setId(character.getId());
            }
            for (int i = 0; i < abilityListModel.getSize(); ++i) {
                dndChar.addAbility(abilityListModel.elementAt(i));
            }
            for (int i = 0; i < equipmentListModel.getSize(); ++i) {
                dndChar.addEquipment(equipmentListModel.elementAt(i));
            }
            optCharacter = Optional.of(dndChar);
        }
        return optCharacter;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        lbCharacterClass = new javax.swing.JLabel();
        lbBirthPlace = new javax.swing.JLabel();
        lbLevel = new javax.swing.JLabel();
        lbRace = new javax.swing.JLabel();
        lbTraits = new javax.swing.JLabel();
        lbAbilities = new javax.swing.JLabel();
        lbEquipment = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        tfBirthPlace = new javax.swing.JTextField();
        tfLevel = new javax.swing.JTextField();
        cbRace = new javax.swing.JComboBox<>();
        cbCharacterClass = new javax.swing.JComboBox<>();
        lbHitPoints = new javax.swing.JLabel();
        tfHitPoints = new javax.swing.JTextField();
        lbStrength = new javax.swing.JLabel();
        lbDexterity = new javax.swing.JLabel();
        lbConstitution = new javax.swing.JLabel();
        lbIntelligence = new javax.swing.JLabel();
        lbWisdom = new javax.swing.JLabel();
        lbCharisma = new javax.swing.JLabel();
        tfStrength = new javax.swing.JTextField();
        tfDexterity = new javax.swing.JTextField();
        tfConstitution = new javax.swing.JTextField();
        tfIntelligence = new javax.swing.JTextField();
        tfWisdom = new javax.swing.JTextField();
        tfCharisma = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAbilities = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        listEquipment = new javax.swing.JList<>();
        btnNewAbility = new javax.swing.JButton();
        btnEditAbility = new javax.swing.JButton();
        btnDeleteAbility = new javax.swing.JButton();
        btnNewEquipment = new javax.swing.JButton();
        btnEditEquipment = new javax.swing.JButton();
        btnDeleteEquipment = new javax.swing.JButton();
        abilityDetails = new javax.swing.JPanel();
        lbAbilityNameHeader = new javax.swing.JLabel();
        lbAbilityName = new javax.swing.JLabel();
        equipmentDetails = new javax.swing.JPanel();
        lbEquipmentTypeHeader = new javax.swing.JLabel();
        lbEquipmentType = new javax.swing.JLabel();
        lbEquipmentNameHeader = new javax.swing.JLabel();
        lbEquipmentName = new javax.swing.JLabel();
        lbEquipmentQuantityHeader = new javax.swing.JLabel();
        lbEquipmentQuantity = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Karakter létrehozása");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        lbName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbName.setText("Név:");

        tfName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNameKeyTyped(evt);
            }
        });

        lbCharacterClass.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbCharacterClass.setText("Osztály:");

        lbBirthPlace.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbBirthPlace.setText("Születési hely:");

        lbLevel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbLevel.setText("Szint:");

        lbRace.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbRace.setText("Faj:");

        lbTraits.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbTraits.setText("Jellemvonások:");

        lbAbilities.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbAbilities.setText("Képességek:");

        lbEquipment.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbEquipment.setText("Felszerelések:");

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Mégsem");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        tfBirthPlace.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfBirthPlace.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfBirthPlaceKeyTyped(evt);
            }
        });

        tfLevel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfLevel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfLevelKeyTyped(evt);
            }
        });

        cbRace.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cbCharacterClass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbCharacterClass.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCharacterClassItemStateChanged(evt);
            }
        });

        lbHitPoints.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbHitPoints.setText("HP:");

        tfHitPoints.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfHitPoints.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfHitPointsKeyTyped(evt);
            }
        });

        lbStrength.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbStrength.setText("Erő");

        lbDexterity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbDexterity.setText("Ügyesség");

        lbConstitution.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbConstitution.setText("Alkat");

        lbIntelligence.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbIntelligence.setText("Intelligencia");

        lbWisdom.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbWisdom.setText("Bölcsesség");

        lbCharisma.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbCharisma.setText("Karizma");

        tfStrength.setEditable(false);
        tfStrength.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfStrength.setFocusable(false);

        tfDexterity.setEditable(false);
        tfDexterity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfDexterity.setFocusable(false);

        tfConstitution.setEditable(false);
        tfConstitution.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfConstitution.setFocusable(false);

        tfIntelligence.setEditable(false);
        tfIntelligence.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfIntelligence.setFocusable(false);

        tfWisdom.setEditable(false);
        tfWisdom.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfWisdom.setFocusable(false);

        tfCharisma.setEditable(false);
        tfCharisma.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfCharisma.setFocusable(false);

        listAbilities.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listAbilities.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listAbilitiesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listAbilities);

        listEquipment.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listEquipment.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listEquipmentValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(listEquipment);

        btnNewAbility.setText("Új...");
        btnNewAbility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewAbilityActionPerformed(evt);
            }
        });

        btnEditAbility.setText("Módosít...");
        btnEditAbility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditAbilityActionPerformed(evt);
            }
        });

        btnDeleteAbility.setText("Töröl");
        btnDeleteAbility.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAbilityActionPerformed(evt);
            }
        });

        btnNewEquipment.setText("Új...");
        btnNewEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEquipmentActionPerformed(evt);
            }
        });

        btnEditEquipment.setText("Módosít...");
        btnEditEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditEquipmentActionPerformed(evt);
            }
        });

        btnDeleteEquipment.setText("Töröl");
        btnDeleteEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEquipmentActionPerformed(evt);
            }
        });

        lbAbilityNameHeader.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbAbilityNameHeader.setText("Képesség neve:");

        javax.swing.GroupLayout abilityDetailsLayout = new javax.swing.GroupLayout(abilityDetails);
        abilityDetails.setLayout(abilityDetailsLayout);
        abilityDetailsLayout.setHorizontalGroup(
            abilityDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abilityDetailsLayout.createSequentialGroup()
                .addComponent(lbAbilityNameHeader)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(lbAbilityName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        abilityDetailsLayout.setVerticalGroup(
            abilityDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(abilityDetailsLayout.createSequentialGroup()
                .addComponent(lbAbilityNameHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbAbilityName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 34, Short.MAX_VALUE))
        );

        lbEquipmentTypeHeader.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbEquipmentTypeHeader.setText("Felszerelés típusa:");

        lbEquipmentType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbEquipmentNameHeader.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbEquipmentNameHeader.setText("Felszerelés neve:");

        lbEquipmentName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbEquipmentQuantityHeader.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbEquipmentQuantityHeader.setText("Felszerelés mennyisége:");

        lbEquipmentQuantity.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout equipmentDetailsLayout = new javax.swing.GroupLayout(equipmentDetails);
        equipmentDetails.setLayout(equipmentDetailsLayout);
        equipmentDetailsLayout.setHorizontalGroup(
            equipmentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equipmentDetailsLayout.createSequentialGroup()
                .addGroup(equipmentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbEquipmentTypeHeader)
                    .addComponent(lbEquipmentNameHeader))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(equipmentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbEquipmentType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbEquipmentName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(equipmentDetailsLayout.createSequentialGroup()
                .addComponent(lbEquipmentQuantityHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbEquipmentQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        equipmentDetailsLayout.setVerticalGroup(
            equipmentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(equipmentDetailsLayout.createSequentialGroup()
                .addGroup(equipmentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbEquipmentType, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbEquipmentTypeHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(equipmentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbEquipmentNameHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(lbEquipmentName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(equipmentDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbEquipmentQuantityHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(lbEquipmentQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbLevel)
                    .addComponent(lbBirthPlace))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfBirthPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tfLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(lbHitPoints)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfHitPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(121, 121, 121)
                        .addComponent(lbName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(489, 489, 489)
                                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lbRace)
                                    .addComponent(lbCharacterClass)
                                    .addComponent(lbTraits)
                                    .addComponent(lbAbilities)
                                    .addComponent(lbEquipment))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbCharacterClass, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbRace, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lbStrength)
                                                    .addComponent(lbIntelligence))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(tfStrength)
                                                    .addComponent(tfIntelligence, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(20, 20, 20)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lbWisdom)
                                                    .addComponent(lbDexterity))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(tfDexterity)
                                                    .addComponent(tfWisdom, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(51, 51, 51)
                                                        .addComponent(lbConstitution))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(18, 18, 18)
                                                        .addComponent(lbCharisma)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(tfCharisma)
                                                    .addComponent(tfConstitution, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnEditAbility, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnDeleteAbility, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnNewAbility, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(abilityDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnEditEquipment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnDeleteEquipment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnNewEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(equipmentDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBirthPlace)
                    .addComponent(tfBirthPlace, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfLevel, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(lbHitPoints, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfHitPoints))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbRace)
                    .addComponent(lbRace, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbCharacterClass)
                    .addComponent(lbCharacterClass, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbDexterity)
                            .addComponent(tfDexterity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbWisdom, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(tfWisdom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbCharisma)
                            .addComponent(tfCharisma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbStrength, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfStrength, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbIntelligence, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(tfIntelligence, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbTraits, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfConstitution, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbConstitution))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbAbilities, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNewAbility)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditAbility)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteAbility))
                    .addComponent(abilityDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNewEquipment)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditEquipment)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteEquipment)))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(equipmentDetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This function is called when the user clicks on the <i>Ok</i> button.
     * If the input fields (name and birth place) are empty, it will show an error.
     * Else it hides the window.
     * @param evt 
     */
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        String error = "";
        if (tfName.getText().isBlank()) {
            error += "Név megadása kötelező!\n";
        }
        if (tfBirthPlace.getText().isBlank()) {
            error += "Születési hely megadása kötelező!\n";
        }
        if (!error.isBlank()) {
            JOptionPane.showMessageDialog(this, error, getTitle(), JOptionPane.ERROR_MESSAGE);
            return;
        }
        ok = true;
        setVisible(false);
    }//GEN-LAST:event_btnOkActionPerformed

    /**
     * This function is called when the user clicks on the <i>Cancel</i> button.
     * It hides the window.
     * @param evt 
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        ok = false;
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * This function is called when the user changes the <code>cbCharacterClass</code> combo box.
     * It sets the values of the text fields of the traits.
     * @param evt 
     */
    private void cbCharacterClassItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCharacterClassItemStateChanged
        CharacterClass cc = (CharacterClass) cbCharacterClass.getSelectedItem();
        tfStrength.setText(String.valueOf(cc.getTrait(Traits.STRENGTH)));
        tfDexterity.setText(String.valueOf(cc.getTrait(Traits.DEXTERITY)));
        tfConstitution.setText(String.valueOf(cc.getTrait(Traits.CONSTITUTION)));
        tfIntelligence.setText(String.valueOf(cc.getTrait(Traits.INTELLIGENCE)));
        tfWisdom.setText(String.valueOf(cc.getTrait(Traits.WISDOM)));
        tfCharisma.setText(String.valueOf(cc.getTrait(Traits.CHARISMA)));
    }//GEN-LAST:event_cbCharacterClassItemStateChanged

    /**
     * This function is called when the user selects an ability in the abilities list.
     * It show the details of the selected ability.
     * @param evt 
     */
    private void listAbilitiesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listAbilitiesValueChanged
        if (listAbilities.getSelectedValue() == null) {
            return;
        }
        Ability ability = listAbilities.getSelectedValue();
        lbAbilityName.setText(ability.getName());
        abilityDetails.setVisible(true);
    }//GEN-LAST:event_listAbilitiesValueChanged

    /**
     * This function is called when the user selects an equipment in the equipment list.
     * It shows the details of the selected equipment.
     * @param evt 
     */
    private void listEquipmentValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listEquipmentValueChanged
        if (listEquipment.getSelectedValue() == null) {
            return;
        }
        Equipment equipment = listEquipment.getSelectedValue();
        lbEquipmentType.setText(equipment.getType().toString());
        lbEquipmentName.setText(equipment.getName());
        lbEquipmentQuantity.setText(String.valueOf(equipment.getQuantity()));
        equipmentDetails.setVisible(true);
    }//GEN-LAST:event_listEquipmentValueChanged

    /**
     * This function is called when the user click on the <i>Új...</i> button next to the ability.
     * It opens an <code>AbilityEditDialog</code> and creates the ability.
     * @param evt 
     */
    private void btnNewAbilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewAbilityActionPerformed
        AbilityEditDialog abilityEdit = new AbilityEditDialog(new JFrame(), Optional.empty());
        abilityEdit.setVisible(true);
        Optional<Ability> ability = abilityEdit.getAbility();
        
        if (ability.isPresent()) {
            if (character.getAbilities() != null) {
                for (Ability characterAbility : character.getAbilities()) {
                    if (characterAbility.getName().equals(ability.get().getName())) {
                        JOptionPane.showMessageDialog(this, "Ilyen képesség már létezik.", "Képesség létrehozása", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            }
            abilityListModel.addElement(ability.get());
            abilityDetails.setVisible(false);
            listAbilities.clearSelection();
        }
    }//GEN-LAST:event_btnNewAbilityActionPerformed

    /**
     * This function is called when the user clicks on the <i>Módosít..</i> button next to the ability.
     * It opens an <code>AbilityEditDialog</code> and modifies the ability.
     * @param evt 
     */
    private void btnEditAbilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditAbilityActionPerformed
        if (listAbilities.getSelectedValue() == null) {
            return;
        }
        Optional<Ability> selectedAbility = Optional.of(listAbilities.getSelectedValue());
        AbilityEditDialog abilityEdit = new AbilityEditDialog(new JFrame(), selectedAbility);
        abilityEdit.setVisible(true);
        Optional<Ability> ability = abilityEdit.getAbility();
        if (ability.isPresent()) {
            if (character.getAbilities() != null) {
                for (Ability characterAbility : character.getAbilities()) {
                    if (characterAbility.getName().equals(ability.get().getName())) {
                        JOptionPane.showMessageDialog(this, "Ilyen képesség már létezik.", "Képesség módosítása", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            }
            abilityListModel.removeElement(selectedAbility.get());
            abilityListModel.addElement(ability.get());
            abilityDetails.setVisible(false);
            listAbilities.clearSelection();
        }
    }//GEN-LAST:event_btnEditAbilityActionPerformed

    /**
     * This function is called when the user clicks on the <i>Töröl</i> button next to the abilities.
     * It deletes the selected ability.
     * @param evt 
     */
    private void btnDeleteAbilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAbilityActionPerformed
        if (listAbilities.getSelectedValue() == null) {
            return;
        }
        int input = JOptionPane.showConfirmDialog(this, "Biztosan törölni szeretnéd a kiválasztott elemet?", "Képesség törlése", JOptionPane.YES_NO_OPTION);
        if (input == 0) {
            abilityListModel.removeElement(listAbilities.getSelectedValue());
            abilityDetails.setVisible(false);
            listAbilities.clearSelection();
        }
    }//GEN-LAST:event_btnDeleteAbilityActionPerformed

    /**
     * This function is called when the user click on the <i>Új...</i> button next to the equipment.
     * It opens an <code>EquipmentEditDialog</code> and creates the equipment.
     * @param evt 
     */
    private void btnNewEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEquipmentActionPerformed
        EquipmentEditDialog equipmentEdit = new EquipmentEditDialog(new JFrame(), Optional.empty());
        equipmentEdit.setVisible(true);
        Optional<Equipment> equipment = equipmentEdit.getEquipment();
        if (equipment.isPresent()) {
            if (character.getEquipment() != null) {
                for (Equipment charEquipment : character.getEquipment()) {
                    if (charEquipment.getName().equals(equipment.get().getName())) {
                        JOptionPane.showMessageDialog(this, "Ilyen felszerelés már létezik.", "Felszerelés létrehozása", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            }
            equipmentListModel.addElement(equipment.get());
            equipmentDetails.setVisible(false);
            listEquipment.clearSelection();
        }
    }//GEN-LAST:event_btnNewEquipmentActionPerformed

    /**
     * This function is called when the user clicks on the <i>Módosít..</i> button next to the equipment.
     * It opens an <code>EquipmentEditDialog</code> and modifies the equipment.
     * @param evt 
     */
    private void btnEditEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditEquipmentActionPerformed
        if (listEquipment.getSelectedValue() == null) {
            return;
        }
        Optional<Equipment> selectedEquipment = Optional.of(listEquipment.getSelectedValue());
        EquipmentEditDialog equipmentEdit = new EquipmentEditDialog(new JFrame(), selectedEquipment);
        equipmentEdit.setVisible(true);
        Optional<Equipment> equipment = equipmentEdit.getEquipment();
        if (equipment.isPresent()) {
            if (character.getEquipment() != null) {
                for (Equipment charEquipment : character.getEquipment()) {
                    if (charEquipment.getName().equals(equipment.get().getName())) {
                        JOptionPane.showMessageDialog(this, "Ilyen felszerelés már létezik.", "Felszerelés létrehozása", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                }
            };
            equipmentListModel.removeElement(selectedEquipment.get());
            equipmentListModel.addElement(equipment.get());
            equipmentDetails.setVisible(false);
            listEquipment.clearSelection();
        }
    }//GEN-LAST:event_btnEditEquipmentActionPerformed

    /**
     * This function is called when the user clicks on the <i>Töröl</i> button next to the equipment.
     * It deletes the selected equipment.
     * @param evt 
     */
    private void btnDeleteEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEquipmentActionPerformed
        if (listEquipment.getSelectedValue() == null) {
            return;
        }
        int input = JOptionPane.showConfirmDialog(this, "Biztosan törölni szeretnéd a kiválasztott elemet?", "Felszerelés törlése", JOptionPane.YES_NO_OPTION);
        if (input == 0) {
            equipmentListModel.removeElement(listEquipment.getSelectedValue());
            equipmentDetails.setVisible(false);
            listEquipment.clearSelection();
        }
    }//GEN-LAST:event_btnDeleteEquipmentActionPerformed

    /**
     * This function is called when this dialog is shown.
     * It clears the list selections and hides the ability's/equipment's details.
     * @param evt 
     */
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        abilityDetails.setVisible(false);
        listAbilities.clearSelection();
        equipmentDetails.setVisible(false);
        listEquipment.clearSelection();
    }//GEN-LAST:event_formComponentShown

    /**
     * This function is called when the user types in the <code>tfLevel</code> text field.
     * It only lets the user type in numerical characters.
     * @param evt 
     */
    private void tfLevelKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfLevelKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0' && c <= '9')) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE) {
            evt.consume();
        }
    }//GEN-LAST:event_tfLevelKeyTyped

    /**
     * This function is called when the user types in the <code>tfHitPoints</code> text field.
     * It only lets the user type in numerical characters.
     * @param evt 
     */
    private void tfHitPointsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfHitPointsKeyTyped
        char c = evt.getKeyChar();
        if (!((c >= '0' && c <= '9')) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE) {
            evt.consume();
        }
    }//GEN-LAST:event_tfHitPointsKeyTyped

    /**
     * This function is called when the user types in the <code>tfName</code> text field.
     * It doesn't let the user type in more than 45 characters in the text field.
     * @param evt 
     */
    private void tfNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNameKeyTyped
        if (tfName.getText().length() > 45) {
            evt.consume();
        }
    }//GEN-LAST:event_tfNameKeyTyped

    /**
     * This function is called when the user types in the <code>tfBithPlace</code> text field.
     * It doesn't let the user type in more than 45 characters in the text field.
     * @param evt 
     */
    private void tfBirthPlaceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBirthPlaceKeyTyped
        if (tfBirthPlace.getText().length() > 45) {
            evt.consume();
        }
    }//GEN-LAST:event_tfBirthPlaceKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CharacterEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CharacterEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CharacterEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CharacterEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CharacterEditDialog dialog = new CharacterEditDialog(new javax.swing.JFrame(), Optional.empty());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel abilityDetails;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDeleteAbility;
    private javax.swing.JButton btnDeleteEquipment;
    private javax.swing.JButton btnEditAbility;
    private javax.swing.JButton btnEditEquipment;
    private javax.swing.JButton btnNewAbility;
    private javax.swing.JButton btnNewEquipment;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox<CharacterClass> cbCharacterClass;
    private javax.swing.JComboBox<Race> cbRace;
    private javax.swing.JPanel equipmentDetails;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbAbilities;
    private javax.swing.JLabel lbAbilityName;
    private javax.swing.JLabel lbAbilityNameHeader;
    private javax.swing.JLabel lbBirthPlace;
    private javax.swing.JLabel lbCharacterClass;
    private javax.swing.JLabel lbCharisma;
    private javax.swing.JLabel lbConstitution;
    private javax.swing.JLabel lbDexterity;
    private javax.swing.JLabel lbEquipment;
    private javax.swing.JLabel lbEquipmentName;
    private javax.swing.JLabel lbEquipmentNameHeader;
    private javax.swing.JLabel lbEquipmentQuantity;
    private javax.swing.JLabel lbEquipmentQuantityHeader;
    private javax.swing.JLabel lbEquipmentType;
    private javax.swing.JLabel lbEquipmentTypeHeader;
    private javax.swing.JLabel lbHitPoints;
    private javax.swing.JLabel lbIntelligence;
    private javax.swing.JLabel lbLevel;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbRace;
    private javax.swing.JLabel lbStrength;
    private javax.swing.JLabel lbTraits;
    private javax.swing.JLabel lbWisdom;
    private javax.swing.JList<Ability> listAbilities;
    private javax.swing.JList<Equipment> listEquipment;
    private javax.swing.JTextField tfBirthPlace;
    private javax.swing.JTextField tfCharisma;
    private javax.swing.JTextField tfConstitution;
    private javax.swing.JTextField tfDexterity;
    private javax.swing.JTextField tfHitPoints;
    private javax.swing.JTextField tfIntelligence;
    private javax.swing.JTextField tfLevel;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfStrength;
    private javax.swing.JTextField tfWisdom;
    // End of variables declaration//GEN-END:variables
}
