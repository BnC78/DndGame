package view;

import character.Ability;
import java.util.Optional;
import javax.swing.JOptionPane;

/**
 * Represents a dialog window for the class <code>Ability</code>.
 */
public class AbilityEditDialog extends javax.swing.JDialog {

    private boolean ok;
    private Ability ability;
    
    /**
     * Creates new form AbilityEditDialog
     * @param parent parent frame of this dialog
     * @param optAbility ability to be modified (empty if new)
     */
    public AbilityEditDialog(java.awt.Frame parent, Optional<Ability> optAbility) {
        super(parent, true);
        initComponents();
        ok = false;
        if (optAbility.isPresent()) {
            ability = optAbility.get();
            tfName.setText(ability.getName());
            setTitle("Képesség módosítása");
        }
    }
    
    /**
     * Returns <code>true</code> if the user closed the window by clicking on the <i>Ok</i> button.
     * Else it returns <code>false</code>
     * @return if window was closed by clicking the <i>Ok</i> button.
     */
    public boolean isOk() {
        return this.ok;
    }
    
    /**
     * If the window was closed by clicking the <i>Ok</i> button, it returns the ability based on the input field of this window.
     * Else it returns an empty <code>Optional</code> 
     * @return an optional ability
     */
    public Optional<Ability> getAbility() {
        Optional<Ability> optAbility = Optional.empty();
        if (this.isOk()) {
            Ability a = new Ability(tfName.getText());
            if (ability != null) {
                a.setId(ability.getId());
            }
            optAbility = Optional.of(a);
        }
        return optAbility;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Képesség szerkesztés");
        setPreferredSize(new java.awt.Dimension(280, 130));
        setResizable(false);

        lbName.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbName.setText("Név:");

        tfName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tfName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNameKeyTyped(evt);
            }
        });

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setText("Mégsem");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("Képesség létrehozása");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * This function is called when the user clicks on the <i>Ok</i> button.
     * If the input field is empty, it will show an error.
     * Else it hides the window.
     * @param evt 
     */
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (tfName.getText().isBlank()) {
            JOptionPane.showMessageDialog(this, "Név megadása kötelező!", getTitle(), JOptionPane.ERROR_MESSAGE);
            return;
        }
        ok = true;
        setVisible(false);
    }//GEN-LAST:event_btnOkActionPerformed

    /**
     * This function is called when the user clicks on the Cancel button.
     * It hides the window.
     * @param evt 
     */
    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        ok = false;
        setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * This function is called when the user types in the <code>tfName</code> text field.
     * It doesn't let the user type in more than 45 characters in the text field.
     * @param evt 
     */
    private void tfNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNameKeyTyped
        if (tfName.getText().length() > 45) {
            evt.consume();
        }
    }//GEN-LAST:event_tfNameKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AbilityEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AbilityEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AbilityEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AbilityEditDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AbilityEditDialog dialog = new AbilityEditDialog(new javax.swing.JFrame(), Optional.empty());
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JLabel lbName;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables
}
